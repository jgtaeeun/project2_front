{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2_front\\\\project2\\\\src\\\\fileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultipleFileUpload() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [buttonText, setButtonText] = useState('Analysis Start');\n  const [result, setResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const token = sessionStorage.getItem(\"authToken\");\n  // 파일 선택 시 호출되는 함수\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files); // 선택된 파일들을 상태에 저장\n  };\n\n  // 파일 업로드 처리 함수\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n      alert('No files selected.');\n      return;\n    }\n    const formData = new FormData();\n\n    // 선택된 파일들을 FormData에 추가\n    for (const file of selectedFiles) {\n      formData.append('files', file);\n    }\n    try {\n      const response = await fetch('http://192.168.0.142:8080/images/imagesFolder', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (response.ok) {\n        alert('Files uploaded and analyzed successfully!');\n      } else {\n        alert('Failed to upload and analyze files.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during the file upload.');\n    }\n  };\n\n  // 이미지 처리 시작 함수\n  const handleAnalysis = async () => {\n    if (!isProcessing) {\n      setButtonText('Analyzing...');\n      setIsProcessing(true);\n      setResult(null);\n      try {\n        const response = await fetch('http://192.168.0.142:8080/images/processImages', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setResult(data);\n          setButtonText('Next');\n        } else {\n          alert('Failed to process images.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred during image processing.');\n      } finally {\n        setIsProcessing(false);\n      }\n    } else {\n      // Next 버튼 클릭 시 분석 반복 (비슷한 방식으로 API 호출)\n      // 여기에 반복 분석 로직을 추가할 수 있습니다.\n      setButtonText('Analyzing...');\n      setIsProcessing(true);\n      try {\n        const response = await fetch('http://192.168.0.142:8080/images/processImages', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setResult(data);\n          setButtonText('Next');\n        } else {\n          alert('Failed to process images.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred during image processing.');\n      } finally {\n        setIsProcessing(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Multiple Images and View Analysis Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      multiple: true // 여러 파일 선택 가능\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        backgroundColor: 'blue',\n        color: 'white'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalysis,\n      disabled: isProcessing,\n      style: {\n        backgroundColor: 'red',\n        color: 'white'\n      },\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Analysis Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Original Filename:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 24\n        }, this), \" \", result.originalFilename]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Original File Path:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 24\n        }, this), \" \", result.originalFilePath]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Flask Transmission Complete:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 24\n        }, this), \" \", result.flaskTransmissionComplete ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"License Plate File Path:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 24\n        }, this), \" \", result.licensePlateFilePath]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"License Plate Recognition Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 24\n        }, this), \" \", result.licensePlateRecognitionStatus ? 'Recognized' : 'Not Recognized']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Recognized License Plate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 24\n        }, this), \" \", result.recognizedLicensePlate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleFileUpload, \"MImTmvZhak7uoKRqD9PpX/WhvoI=\");\n_c = MultipleFileUpload;\nexport default MultipleFileUpload;\nvar _c;\n$RefreshReg$(_c, \"MultipleFileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MultipleFileUpload","_s","selectedFiles","setSelectedFiles","buttonText","setButtonText","result","setResult","isProcessing","setIsProcessing","token","sessionStorage","getItem","handleFileChange","e","target","files","handleUpload","length","alert","formData","FormData","file","append","response","fetch","method","headers","body","ok","error","console","handleAnalysis","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","multiple","onClick","style","backgroundColor","color","disabled","originalFilename","originalFilePath","flaskTransmissionComplete","licensePlateFilePath","licensePlateRecognitionStatus","recognizedLicensePlate","_c","$RefreshReg$"],"sources":["C:/project2_front/project2/src/fileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nfunction MultipleFileUpload() {\nconst [selectedFiles, setSelectedFiles] = useState([]);\n\nconst [buttonText, setButtonText] = useState('Analysis Start');\n\nconst [result, setResult] = useState(null);\nconst [isProcessing, setIsProcessing] = useState(false);\n\nconst token =sessionStorage.getItem(\"authToken\")\n// 파일 선택 시 호출되는 함수\nconst handleFileChange = (e) => {\n    setSelectedFiles(e.target.files); // 선택된 파일들을 상태에 저장\n};\n\n// 파일 업로드 처리 함수\nconst handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n        alert('No files selected.');\n        return;\n    }\n\n    const formData = new FormData();\n    \n    // 선택된 파일들을 FormData에 추가\n    for (const file of selectedFiles) {\n        formData.append('files', file);\n    }\n\n    try {\n        const response = await fetch('http://192.168.0.142:8080/images/imagesFolder', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n            },\n            body: formData,\n        });\n\n        if (response.ok) {\n            alert('Files uploaded and analyzed successfully!');\n        } else {\n            alert('Failed to upload and analyze files.');\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred during the file upload.');\n    }\n};\n\n\n    // 이미지 처리 시작 함수\n    const handleAnalysis = async () => {\n        if (!isProcessing) {\n            setButtonText('Analyzing...');\n            setIsProcessing(true);\n            setResult(null);\n\n            try {\n                const response = await fetch('http://192.168.0.142:8080/images/processImages', {\n                    method: 'GET',\n                    headers: {\n                      'Authorization': `Bearer ${token}`,\n                  },\n                });\n\n                if (response.ok) {\n                    const data = await response.json();\n                    setResult(data);\n                    setButtonText('Next');\n                } else {\n                    alert('Failed to process images.');\n                }\n            } catch (error) {\n                console.error('Error:', error);\n                alert('An error occurred during image processing.');\n            } finally {\n                setIsProcessing(false);\n            }\n        } else {\n            // Next 버튼 클릭 시 분석 반복 (비슷한 방식으로 API 호출)\n            // 여기에 반복 분석 로직을 추가할 수 있습니다.\n            setButtonText('Analyzing...');\n            setIsProcessing(true);\n            \n\n            try {\n                const response = await fetch('http://192.168.0.142:8080/images/processImages', {\n                    method: 'GET',\n                    headers: {\n                      'Authorization': `Bearer ${token}`,\n                  },\n                });\n\n                if (response.ok) {\n                    const data = await response.json();\n                    setResult(data);\n                    setButtonText('Next');\n                } else {\n                    alert('Failed to process images.');\n                }\n            } catch (error) {\n                console.error('Error:', error);\n                alert('An error occurred during image processing.');\n            } finally {\n                setIsProcessing(false);\n            }\n        }\n    };\n\nreturn (\n    <div>\n        <h1>Upload Multiple Images and View Analysis Result</h1>\n        <input\n            type=\"file\"\n            onChange={handleFileChange}\n            multiple // 여러 파일 선택 가능\n        />\n        <button onClick={handleUpload} style={{\n                backgroundColor: 'blue',  color: 'white',  }}>Upload</button>\n     \n\n        <button onClick={handleAnalysis} disabled={isProcessing} style={{\n                backgroundColor: 'red',  color: 'white',  }}>\n                {buttonText}\n            </button>\n            {result && (\n                <div>\n                    <h2>Analysis Result:</h2>\n                    <p><strong>Original Filename:</strong> {result.originalFilename}</p>\n                    <p><strong>Original File Path:</strong> {result.originalFilePath}</p>\n                    <p><strong>Flask Transmission Complete:</strong> {result.flaskTransmissionComplete ? 'Yes' : 'No'}</p>\n                    <p><strong>License Plate File Path:</strong> {result.licensePlateFilePath}</p>\n                    <p><strong>License Plate Recognition Status:</strong> {result.licensePlateRecognitionStatus ? 'Recognized' : 'Not Recognized'}</p>\n                    <p><strong>Recognized License Plate:</strong> {result.recognizedLicensePlate}</p>\n                </div>\n            )}\n    </div>\n\n    \n);\n}\nexport default MultipleFileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}