{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2_front\\\\project2\\\\src\\\\fileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadAndResult = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null); // 사용자가 선택한 이미지\n  const [uploadedImageUrl, setUploadedImageUrl] = useState(''); // 서버에서 반환된 이미지 경로\n  const [analysisText, setAnalysisText] = useState(''); // 서버에서 반환된 분석 텍스트\n  const [analyzedImageUrl, setAnalyzedImageUrl] = useState(''); // 서버에서 반환된 분석된 이미지 URL\n\n  // 이미지 선택 핸들러\n  const handleImageChange = e => {\n    setSelectedImage(e.target.files[0]);\n  };\n\n  // 이미지 업로드 핸들러\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n    try {\n      // 이미지 파일을 백엔드에 업로드\n      const uploadResponse = await axios.post('http://192.168.0.142:8080/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const analysisId = uploadResponse.data.analysisId; // 서버에서 분석 ID를 반환\n      console.log(\"Analysis ID:\", analysisId);\n\n      // 업로드 후 분석된 데이터를 받아오기\n      fetchAnalysisResult(analysisId);\n    } catch (error) {\n      console.error('Error uploading the image', error);\n    }\n  };\n\n  // 분석 결과 요청 핸들러\n  const fetchAnalysisResult = async analysisId => {\n    try {\n      // 서버로부터 분석 결과 요청\n      const resultResponse = await axios.get(`http://192.168.0.142:8080/api/result/${analysisId}`);\n\n      // 서버에서 받은 분석된 이미지 URL과 분석 텍스트 저장\n      setAnalyzedImageUrl(resultResponse.data.analyzedImageUrl);\n      setAnalysisText(resultResponse.data.analysisText);\n    } catch (error) {\n      console.error('Error fetching analysis result', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Image and View Analysis Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload and Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), uploadedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://192.168.0.142:8080${uploadedImageUrl}`,\n        alt: \"Uploaded\",\n        style: {\n          width: '300px',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), analyzedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Analyzed Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://192.168.0.142:8080${analyzedImageUrl}`,\n        alt: \"Analyzed Result\",\n        style: {\n          width: '300px',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), analysisText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Analysis Result Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: analysisText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadAndResult, \"IlCBrMlr3fcJuNPba+nQ/4MAb8g=\");\n_c = ImageUploadAndResult;\nexport default ImageUploadAndResult;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadAndResult\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploadAndResult","_s","selectedImage","setSelectedImage","uploadedImageUrl","setUploadedImageUrl","analysisText","setAnalysisText","analyzedImageUrl","setAnalyzedImageUrl","handleImageChange","e","target","files","handleUpload","formData","FormData","append","uploadResponse","post","headers","analysisId","data","console","log","fetchAnalysisResult","error","resultResponse","get","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","src","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/project2_front/project2/src/fileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ImageUploadAndResult = () => {\n  const [selectedImage, setSelectedImage] = useState(null); // 사용자가 선택한 이미지\n  const [uploadedImageUrl, setUploadedImageUrl] = useState(''); // 서버에서 반환된 이미지 경로\n  const [analysisText, setAnalysisText] = useState(''); // 서버에서 반환된 분석 텍스트\n  const [analyzedImageUrl, setAnalyzedImageUrl] = useState(''); // 서버에서 반환된 분석된 이미지 URL\n\n  // 이미지 선택 핸들러\n  const handleImageChange = (e) => {\n    setSelectedImage(e.target.files[0]);\n  };\n\n  // 이미지 업로드 핸들러\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('image', selectedImage);\n\n    try {\n      // 이미지 파일을 백엔드에 업로드\n      const uploadResponse = await axios.post('http://192.168.0.142:8080/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      const analysisId = uploadResponse.data.analysisId; // 서버에서 분석 ID를 반환\n      console.log(\"Analysis ID:\", analysisId);\n\n      // 업로드 후 분석된 데이터를 받아오기\n      fetchAnalysisResult(analysisId);\n    } catch (error) {\n      console.error('Error uploading the image', error);\n    }\n  };\n\n  // 분석 결과 요청 핸들러\n  const fetchAnalysisResult = async (analysisId) => {\n    try {\n      // 서버로부터 분석 결과 요청\n      const resultResponse = await axios.get(`http://192.168.0.142:8080/api/result/${analysisId}`);\n\n      // 서버에서 받은 분석된 이미지 URL과 분석 텍스트 저장\n      setAnalyzedImageUrl(resultResponse.data.analyzedImageUrl);\n      setAnalysisText(resultResponse.data.analysisText);\n    } catch (error) {\n      console.error('Error fetching analysis result', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Upload Image and View Analysis Result</h1>\n      <input type=\"file\" onChange={handleImageChange} />\n      <button onClick={handleUpload}>Upload and Analyze</button>\n\n      {/* 업로드된 이미지 미리보기 */}\n      {uploadedImageUrl && (\n        <div>\n          <h3>Uploaded Image:</h3>\n          <img src={`http://192.168.0.142:8080${uploadedImageUrl}`} alt=\"Uploaded\" style={{ width: '300px', height: 'auto' }} />\n        </div>\n      )}\n\n      {/* 분석 결과 출력: 분석된 이미지 및 분석된 텍스트 */}\n      {analyzedImageUrl && (\n        <div>\n          <h3>Analyzed Image:</h3>\n          <img src={`http://192.168.0.142:8080${analyzedImageUrl}`} alt=\"Analyzed Result\" style={{ width: '300px', height: 'auto' }} />\n        </div>\n      )}\n\n      {analysisText && (\n        <div>\n          <h3>Analysis Result Text:</h3>\n          <p>{analysisText}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImageUploadAndResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}