{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2_front\\\\project2\\\\src\\\\fileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultipleFileUpload() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const token = sessionStorage.getItem(\"authToken\");\n  const [buttonText, setButtonText] = useState('Analysis Start');\n\n  // 파일 선택 시 호출되는 함수\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files); // 선택된 파일들을 상태에 저장\n  };\n\n  // 파일 업로드 처리 함수\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n      alert('No files selected.');\n      return;\n    }\n    const formData = new FormData();\n\n    // 선택된 파일들을 FormData에 추가\n    for (const file of selectedFiles) {\n      formData.append('files', file);\n    }\n    try {\n      const response = await fetch('http://192.168.0.142:8080/images/imagesFolder', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (response.ok) {\n        alert('Files uploaded and analyzed successfully!');\n      } else {\n        alert('Failed to upload and analyze files.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during the file upload.');\n    }\n  };\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // 이미지 처리 시작 함수\n  const handleAnalysis = async () => {\n    if (!isProcessing) {\n      setButtonText('Analyzing...');\n      setIsProcessing(true);\n      setResult(null);\n      try {\n        const response = await fetch('http://192.168.0.142:8080/images/processImages', {\n          method: 'GET'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setResult(data);\n          setButtonText('Next');\n        } else {\n          alert('Failed to process images.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred during image processing.');\n      } finally {\n        setIsProcessing(false);\n      }\n    } else {\n      // Next 버튼 클릭 시 분석 반복 (비슷한 방식으로 API 호출)\n      // 여기에 반복 분석 로직을 추가할 수 있습니다.\n      console.log('Next analysis...');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Multiple Images and View Analysis Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      multiple: true // 여러 파일 선택 가능\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalysis,\n      children: [\" \", buttonText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleFileUpload, \"HKmfzWBxUh99ektFZTn6qz/PJoE=\");\n_c = MultipleFileUpload;\nexport default MultipleFileUpload;\nvar _c;\n$RefreshReg$(_c, \"MultipleFileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MultipleFileUpload","_s","selectedFiles","setSelectedFiles","token","sessionStorage","getItem","buttonText","setButtonText","handleFileChange","e","target","files","handleUpload","length","alert","formData","FormData","file","append","response","fetch","method","headers","body","ok","error","console","isProcessing","setIsProcessing","handleAnalysis","setResult","data","json","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","multiple","onClick","_c","$RefreshReg$"],"sources":["C:/project2_front/project2/src/fileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nfunction MultipleFileUpload() {\nconst [selectedFiles, setSelectedFiles] = useState([]);\nconst token =sessionStorage.getItem(\"authToken\")\nconst [buttonText, setButtonText] = useState('Analysis Start');\n\n\n\n// 파일 선택 시 호출되는 함수\nconst handleFileChange = (e) => {\n    setSelectedFiles(e.target.files); // 선택된 파일들을 상태에 저장\n};\n\n// 파일 업로드 처리 함수\nconst handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n        alert('No files selected.');\n        return;\n    }\n\n    const formData = new FormData();\n    \n    // 선택된 파일들을 FormData에 추가\n    for (const file of selectedFiles) {\n        formData.append('files', file);\n    }\n\n    try {\n        const response = await fetch('http://192.168.0.142:8080/images/imagesFolder', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n            },\n            body: formData,\n        });\n\n        if (response.ok) {\n            alert('Files uploaded and analyzed successfully!');\n        } else {\n            alert('Failed to upload and analyze files.');\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred during the file upload.');\n    }\n};\n\nconst [isProcessing, setIsProcessing] = useState(false);\n\n    // 이미지 처리 시작 함수\n    const handleAnalysis = async () => {\n        if (!isProcessing) {\n            setButtonText('Analyzing...');\n            setIsProcessing(true);\n            setResult(null);\n\n            try {\n                const response = await fetch('http://192.168.0.142:8080/images/processImages', {\n                    method: 'GET',\n                });\n\n                if (response.ok) {\n                    const data = await response.json();\n                    setResult(data);\n                    setButtonText('Next');\n                } else {\n                    alert('Failed to process images.');\n                }\n            } catch (error) {\n                console.error('Error:', error);\n                alert('An error occurred during image processing.');\n            } finally {\n                setIsProcessing(false);\n            }\n        } else {\n            // Next 버튼 클릭 시 분석 반복 (비슷한 방식으로 API 호출)\n            // 여기에 반복 분석 로직을 추가할 수 있습니다.\n            console.log('Next analysis...');\n        }\n    };\n\nreturn (\n    <div>\n        <h1>Upload Multiple Images and View Analysis Result</h1>\n        <input\n            type=\"file\"\n            onChange={handleFileChange}\n            multiple // 여러 파일 선택 가능\n        />\n        <button onClick={handleUpload}>Upload</button>\n        <button onClick={handleAnalysis}> {buttonText}</button>\n    </div>\n);\n}\nexport default MultipleFileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}