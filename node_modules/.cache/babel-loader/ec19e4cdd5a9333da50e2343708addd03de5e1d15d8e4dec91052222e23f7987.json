{"ast":null,"code":"var _jsxFileName = \"C:\\\\project2_front\\\\project2\\\\src\\\\fileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultipleFileUpload() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [buttonText, setButtonText] = useState('Analysis Start');\n  const [result, setResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [message, setMessage] = useState('');\n  const token = sessionStorage.getItem(\"authToken\");\n  // 파일 선택 시 호출되는 함수\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files); // 선택된 파일들을 상태에 저장\n  };\n\n  // 파일 업로드 처리 함수\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n      alert('No files selected.');\n      return;\n    }\n    const formData = new FormData();\n\n    // 선택된 파일들을 FormData에 추가\n    for (const file of selectedFiles) {\n      formData.append('files', file);\n    }\n    try {\n      const response = await fetch('http://192.168.0.142:8080/images/imagesFolder', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (response.ok) {\n        alert('Files uploaded and analyzed successfully!');\n      } else {\n        alert('Failed to upload and analyze files.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during the file upload.');\n    }\n  };\n\n  // 이미지 처리 시작 함수\n  const handleAnalysis = async () => {\n    if (!isProcessing) {\n      setButtonText('Analyzing...');\n      setIsProcessing(true);\n      try {\n        const response = await fetch('http://192.168.0.142:8080/images/processImages', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setResult(data);\n          if (data.name) {\n            setMessage('Analysis Successful');\n            setButtonText('Next');\n          } else {\n            setMessage('Analysis Failed: No image found');\n            setButtonText('Start');\n          }\n        } else {\n          setMessage('Analysis Failed: Server error');\n          setButtonText('Start');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        setMessage('Analysis Failed: An error occurred');\n        setButtonText('Start');\n      } finally {\n        setIsProcessing(false);\n      }\n    } else {\n      // 'Next' 버튼 클릭 시 추가 처리 로직\n      console.log('Proceeding to next step...');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Multiple Images and View Analysis Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      multiple: true // 여러 파일 선택 가능\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        backgroundColor: 'blue',\n        color: 'white',\n        borderRadius: '5px'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnalysis,\n      disabled: isProcessing,\n      style: {\n        backgroundColor: 'red',\n        color: 'white',\n        borderRadius: '5px'\n      },\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), result && result.name && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Image Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://192.168.0.142:8080/image/${result.name}`,\n        alt: \"Processed Content\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        },\n        onError: e => {\n          e.target.src = 'path/to/placeholder-image.jpg'; // 이미지 로드 실패 시 대체 이미지\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleFileUpload, \"7dvSQ88c8qyyQqXVJAlqNUYVYeE=\");\n_c = MultipleFileUpload;\nexport default MultipleFileUpload;\nvar _c;\n$RefreshReg$(_c, \"MultipleFileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MultipleFileUpload","_s","selectedFiles","setSelectedFiles","buttonText","setButtonText","result","setResult","isProcessing","setIsProcessing","message","setMessage","token","sessionStorage","getItem","handleFileChange","e","target","files","handleUpload","length","alert","formData","FormData","file","append","response","fetch","method","headers","body","ok","error","console","handleAnalysis","data","json","name","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","multiple","onClick","style","backgroundColor","color","borderRadius","disabled","src","alt","maxWidth","height","onError","_c","$RefreshReg$"],"sources":["C:/project2_front/project2/src/fileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nfunction MultipleFileUpload() {\nconst [selectedFiles, setSelectedFiles] = useState([]);\n\nconst [buttonText, setButtonText] = useState('Analysis Start');\n\nconst [result, setResult] = useState(null);\nconst [isProcessing, setIsProcessing] = useState(false);\nconst [message, setMessage] = useState('');\n\nconst token =sessionStorage.getItem(\"authToken\")\n// 파일 선택 시 호출되는 함수\nconst handleFileChange = (e) => {\n    setSelectedFiles(e.target.files); // 선택된 파일들을 상태에 저장\n};\n\n// 파일 업로드 처리 함수\nconst handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n        alert('No files selected.');\n        return;\n    }\n\n    const formData = new FormData();\n    \n    // 선택된 파일들을 FormData에 추가\n    for (const file of selectedFiles) {\n        formData.append('files', file);\n    }\n\n    try {\n        const response = await fetch('http://192.168.0.142:8080/images/imagesFolder', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n            },\n            body: formData,\n        });\n\n        if (response.ok) {\n            alert('Files uploaded and analyzed successfully!');\n        } else {\n            alert('Failed to upload and analyze files.');\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        alert('An error occurred during the file upload.');\n    }\n};\n\n\n    // 이미지 처리 시작 함수\n    const handleAnalysis = async () => {\n      if (!isProcessing) {\n          setButtonText('Analyzing...');\n          setIsProcessing(true);\n          \n\n          try {\n              const response = await fetch('http://192.168.0.142:8080/images/processImages', {\n                  method: 'GET',\n                  headers: {\n                      'Authorization': `Bearer ${token}`,\n                  },\n              });\n\n              if (response.ok) {\n                  const data = await response.json();\n                  setResult(data);\n                  if (data.name) {\n                      setMessage('Analysis Successful');\n                      setButtonText('Next');\n                  } else {\n                      setMessage('Analysis Failed: No image found');\n                      setButtonText('Start');\n                  }\n              } else {\n                  setMessage('Analysis Failed: Server error');\n                  setButtonText('Start');\n              }\n          } catch (error) {\n              console.error('Error:', error);\n              setMessage('Analysis Failed: An error occurred');\n              setButtonText('Start');\n          } finally {\n              setIsProcessing(false);\n          }\n      } else {\n          // 'Next' 버튼 클릭 시 추가 처리 로직\n          console.log('Proceeding to next step...');\n      }\n  };\n\nreturn (\n    <div>\n        <h1>Upload Multiple Images and View Analysis Result</h1>\n        <input\n            type=\"file\"\n            onChange={handleFileChange}\n            multiple // 여러 파일 선택 가능\n        />\n        <button onClick={handleUpload} style={{\n                backgroundColor: 'blue',  color: 'white',   borderRadius: '5px',     }}>Upload</button>\n     \n     <button\n                onClick={handleAnalysis}\n                disabled={isProcessing} style={{\n                  backgroundColor: 'red',  color: 'white',   borderRadius: '5px',     }}\n            >\n                {buttonText}\n            </button>\n            <p>{message}</p>\n            {result && result.name && (\n                <div>\n                    <h2>Image Preview:</h2>\n                    <img\n                        src={`http://192.168.0.142:8080/image/${result.name}`}\n                        alt=\"Processed Content\"\n                        style={{ maxWidth: '100%', height: 'auto' }}\n                        onError={(e) => {\n                            e.target.src = 'path/to/placeholder-image.jpg'; // 이미지 로드 실패 시 대체 이미지\n                        }}\n                    />\n                    <p></p>\n                </div>\n            )}\n    </div>\n\n    \n);\n}\nexport default MultipleFileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}